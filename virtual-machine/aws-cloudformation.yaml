tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.1.0/types.yaml
  - plugin:cloudify-aws-plugin
  - plugin:cloudify-utilities-plugin?version= >=1.22.1

inputs:

  aws_access_key_id:
    type: string
    default: { get_secret: aws_access_key_id }

  aws_secret_access_key:
    type: string
    default: { get_secret: aws_secret_access_key }

  aws_region_name:
    type: string
    default: 'us-east-1'

  availability_zone:
    type: string
    default: { concat: [ { get_input: aws_region_name }, 'd' ] }

  vpc_cidr:
    type: string
    default: 172.30.0.0/16

  subnet_cidr:
    type: string
    default: 172.30.0.0/24

  resource_suffix:
    default: '-a'

  key_pair_name:
    type: string
    default: { concat: [ 'two_tier_key', { get_input: resource_suffix } ] }

  agent_user:
    description: >
      The username of the agent running on the instance created from the image.
    default: 'ec2-user'

  agent_key_name:
    type: string
    default: agent_key

  template_url:
    type: string
    default: https://cloudify-release-eu.s3-eu-west-1.amazonaws.com/cloudify/blueprints/5.0.5/cloudformation/template.yaml

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

node_templates:

  two_tier_keypair:
    type: cloudify.nodes.aws.ec2.Keypair
    properties:
      client_config: *client_config
      resource_config:
        KeyName: { get_input: key_pair_name }
        PublicKeyMaterial: { get_attribute: [agent_key, public_key_export] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: agent_key

  two_tier_stack:
    type: cloudify.nodes.aws.CloudFormation.Stack
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          StackName: { concat: [ 'Two-Tier-Sample-Stack', { get_input: resource_suffix } ] }
          Parameters:
          - ParameterKey: InstanceType
            ParameterValue: t2.small
          - ParameterKey: KeyName
            ParameterValue: { get_input: key_pair_name }
          - ParameterKey: VpcCIDR
            ParameterValue: { get_input: vpc_cidr }
          - ParameterKey: SubnetCIDR
            ParameterValue: { get_input: subnet_cidr }
          TemplateURL: { get_input: template_url }
    relationships:
      - type: cloudify.relationships.depends_on
        target: two_tier_keypair

  agent_key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      resource_config:
        key_name: { get_input: agent_key_name }
        openssh_format: true
      use_secret_store: true
      use_secrets_if_exist: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: keys.cloudify_ssh_key.operations.create
          inputs:
            store_private_key_material: true

capabilities:

  endpoint:
    description: The external endpoint of the application.
    value: { get_attribute: [ two_tier_stack, Outputs, 0, OutputValue ] }

  user:
    description: user ID.
    value: { get_input: agent_user }

  key_content:
    description: Private agent key
    value: { get_attribute: [agent_key, private_key_export] }
